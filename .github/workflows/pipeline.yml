name: Spark Pipeline
on:
  push:
    branches:
      - develop
      - staging
      - master
jobs:
  deploy_zip:
    name: deploy lambda function
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/master')
        run: |
         echo "ENVIRONMENT=production" >> $GITHUB_ENV
      - name: Set env to staging
        if: endsWith(github.ref, '/staging')
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
      - name: Set env to development
        if: endsWith(github.ref, '/develop')
        run: |
         echo "ENVIRONMENT=development" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - name: serverless deploy
        uses: serverless/github-action@master
        with:
          args: deploy --stage=${ENVIRONMENT}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}