name: Spark production Pipeline
on:
  push:
    branches:
      - master
env:
  LAMBDA_ENVIRONMENT: production

jobs:
  deploy_zip:
    name: deploy lambda function
    runs-on: macos-latest
    strategy:
      matrix:
        node-version:
          - 12.x
    steps:
      - uses: actions/checkout@v2
      - name: Get Repository name
        run: echo "REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')" >> $GITHUB_ENV
        shell: bash
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build application
        run: npm install
      - name: Removes existing .env file
        run: rm -f .env*

      - name: Get Common SSM parameters
        uses: deptno/action-aws-ssm-to-dotenv@v1.3.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        with:
          ssm-path: /${{ env.LAMBDA_ENVIRONMENT }}/lambda/commons/
          format: dotenv
          output: .env.${{ env.LAMBDA_ENVIRONMENT }}
      - name: Get Specific SSM parameters
        uses: deptno/action-aws-ssm-to-dotenv@v1.3.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        with:
          ssm-path: /${{ env.LAMBDA_ENVIRONMENT }}/lambda/${{env.REPOSITORY_NAME}}/
          format: dotenv
          output: .env.${{ env.LAMBDA_ENVIRONMENT }}
      - name: Install serverless
        run: npm install -g serverless@2.x
      - name: serverless deploy
        run: serverless deploy --stage ${{env.LAMBDA_ENVIRONMENT}}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
